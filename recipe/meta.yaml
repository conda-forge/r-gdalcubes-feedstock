{% set version = "0.6.4" %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-gdalcubes
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/gdalcubes_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/gdalcubes/gdalcubes_{{ version }}.tar.gz
  sha256: eddb8caac79c195715aa5dc45e7388bcc099092fac4411730828c4c39a327dff

build:
  merge_build_host: true  # [win]
  skip: true              # [win]
  number: 1
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}          # [not win]
    - {{ compiler('m2w64_c') }}    # [win]
    - {{ compiler('cxx') }}        # [not win]
    - {{ compiler('m2w64_cxx') }}  # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
  host:
    - r-base
    - r-bh
    - r-jsonlite
    - r-ncdf4
    - r-rcpp
    - libnetcdf  # [not win]
    - libgdal    # [not win]
    - proj       # [not win]
    - sqlite     # [not win]
  run:
    - r-base
    - {{ native }}gcc-libs         # [win]
    - r-bh
    - r-jsonlite
    - r-ncdf4
    - r-rcpp
    - libnetcdf  # [not win]
    - libgdal    # [not win]
    - proj       # [not win]
    - sqlite     # [not win]

test:
  commands:
    - $R -e "library('gdalcubes')"           # [not win]
    - "\"%R%\" -e \"library('gdalcubes')\""  # [win]

about:
  home: https://github.com/appelmar/gdalcubes_R
  license: MIT
  summary: Processing collections of Earth observation images as on-demand multispectral, multitemporal raster data cubes. Users define cubes by spatiotemporal extent, resolution, and spatial reference system and let 'gdalcubes' automatically apply cropping, reprojection, and resampling using the 'Geospatial Data Abstraction
    Library' ('GDAL'). Implemented functions on data cubes include reduction over space and time, applying arithmetic expressions on pixel band values, moving window aggregates over time, filtering by space, time, bands, and predicates on pixel values, exporting data cubes as 'netCDF' or 'GeoTIFF' files, and plotting.  The
    package implements lazy evaluation and multithreading. All computational parts are implemented in C++, linking to the 'GDAL', 'netCDF', 'CURL', and 'SQLite' libraries. See Appel and Pebesma (2019) <doi:10.3390/data4030092> for further details.
  license_family: MIT
  license_file:
    - {{ environ["PREFIX"] }}/lib/R/share/licenses/MIT
    - LICENSE

extra:
  recipe-maintainers:
    - conda-forge/r
    - TomAugspurger
